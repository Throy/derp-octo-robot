<!-- model -->
@model IndignadoWeb.Models.UserConfigModel


<!-- scripts -->
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui-1.8.11.js" type="text/javascript"></script>
<link href="../../Content/themes/base/jquery.ui.all.css" rel="stylesheet" type="text/css" />

<script type="text/javascript">
    $(document).ready(function () { $('.date').datepicker({ dateFormat: "dd/mm/yy" }); });   
</script>


<script type="text/javascript"
    src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDMxElmlzDp8EFWG0el5fZxRrRzN3E3NRU&sensor=false">
</script>

<script type="text/javascript">
    function onlyNumbers(id, limit) {
        
        if (event.keyCode >= 48 && event.keyCode <= 58) {
            return true;
        }
        else
            event.keyCode = 8;
        return false;
    }
</script>

<script type="text/javascript">
    var map;
    var markersArray = [];
    function googleMapsInitialize() {
        // initialize map
        var myOptions = {
            center: new google.maps.LatLng(@Model.locationLati.ToString().Replace(",", "."), @Model.locationLong.ToString().Replace(",", ".")),
            zoom: 6,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
        // setting the function that will respond onclick (create a marker)
        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });
        // Delete Markers Function
        google.maps.Map.prototype.clearOverlays = function () {
            if (markersArray) {
                for (var i = 0; i < markersArray.length; i++) {
                    markersArray[i].setMap(null);
                }
            }
        }
        //add default marker
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(@Model.locationLati.ToString().Replace(",", "."), @Model.locationLong.ToString().Replace(",", ".")),
            map: map
        });
        markersArray.push(marker);
        document.getElementById("locationLong").value = marker.getPosition().lng().toString();
        document.getElementById("locationLati").value = marker.getPosition().lat().toString();
    }
    function placeMarker(location) {
        map.clearOverlays();
        var marker = new google.maps.Marker({
            position: location,
            map: map
        });
        markersArray.push(marker);
        document.getElementById("locationLong").value = marker.getPosition().lng().toString();
        document.getElementById("locationLati").value = marker.getPosition().lat().toString();
    }

 </script>

<!-- page title -->
@{
    ViewBag.Title = "Indignado Framework - User configuration";
}

<!-- page content -->

<h2 >User configuration</h2>

<p>
<font style="font-style:italic; font-size: 90%">Please place yourself in the map.</font>
</p>

<div id="map_canvas" style="width:400px; height:310px; float:left; margin-left:70px; border-style:outset; margin-top:2px; border-width:2px; border-color:Gray; box-shadow:0 1px 2px #aaa; -moz-box-shadow:0 2px 3px #AAAAAA"></div>

<form action="/Home/UserConfig" method="post" enctype="multipart/form-data">
    @Html.ValidationSummary(true, "Some fields have errors, please fix them.")
    <div style="width:250px; float:left; border-style:solid; border-radius:4px; -moz-border-radius:4px; margin-left:20px; border-width:2px; border-color:Gray; box-shadow:0 1px 2px #aaa; -moz-box-shadow:0 2px 3px #AAAAAA ">
        <fieldset style="border-color:transparent">
            <div class="editor-label">
                @Html.LabelFor(m => m.fullName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.fullName)
                @Html.ValidationMessageFor(m => m.fullName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.mail)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.mail)
                @Html.ValidationMessageFor(m => m.mail)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.locationLati)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.locationLati)
                @Html.ValidationMessageFor(m => m.locationLati)
            </div>
            
            <div class="editor-label">
                @Html.LabelFor(m => m.locationLong)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.locationLong)
                @Html.ValidationMessageFor(m => m.locationLong)
            <p>
                <input class="boton-big-red" style="height:30px; margin-top:10px" type="submit" name="buttonUpdate" value="Update configuration" />
            </p>
        </fieldset>
    </div>
</form>

<script type="text/javascript">googleMapsInitialize();</script>
